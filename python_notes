# Children within children using Multiprocessing is not possible. It throws and error: "daemonic processes are not allowed to have children."
# a*a*a is faster than a**3.
# Python dictionaries are implemented as hash tables.Link for more info: https://stackoverflow.com/questions/9010222/how-can-python-dict-have-multiple-keys-with-same-hash
see answer praveen-gollakota
# If you send the cookies with a request, you dont receive the cookies for the same request. 
#Info about Certificate Files (.der, .pem)-
.der and .pem are encodings. While .cer, .crt, .key are the common extensions. pkcs7 and pkcs12 are may be alternatives to .der and .pem? Dont know.  
Refer the link-
https://support.ssl.com/Knowledgebase/Article/View/19/0/der-vs-crt-vs-cer-vs-pem-certificates-and-how-to-convert-them
#cURL command to get the cookies back and sending with certificate file:
Final command with saving cookies and sending a certificate:
curl -k -d "j_username=tpcadmin&j_password=Passw0rd" --cert cert_pem.pem -X POST https://10.10.6.104:9569/srm/j_security_check -c cooks1234_WON.txt
#sent from 10.10.6.136 C:\Users\Administrator
#To convert a certificate just go windows machine, open the certificate>Details>copy to file>select base64 for .pem format. 
#The key matter is still not sure though. 
#time.clock() and time.time() difference Link. time.clock() is an excellent measuere for benchmarking performance of an algorithm. 
https://stackoverflow.com/questions/17498199/why-are-there-differences-in-python-time-time-and-time-clock-on-mac-os-x
# When using multiprocessing.Pool, by default the processes are created as daemonic. You will have to write a override sub-class 
to change that. 
#refer this link and go through multithreading course by Satish on udemy. 
#link: https://stackoverflow.com/questions/6974695/python-process-pool-non-daemonic
#also refer this from your MAC: 
http://localhost:8890/notebooks/Desktop/Applications/Google_Drive/__python_practice/_Intro_to_machine_learning/multi-multi_processing_error_working_muliti_multi_threading.ipynb
#installing python on Linux using configure and make:
https://stackoverflow.com/questions/8087184/problems-installing-python3-on-rhel

#Getting a gender by giving a fist name:
https://api.genderize.io/?name=akash

#Giving files for path in different operating systems: 
Use 
>>> os.path.join( "C:", "meshes", "as" )

#For windows if giving path to a directory withing current working folder:
Give 'directory_name\file_name.extension_name' as path instead of '\directory_name\file_name.extension_name'
Note: Sometimes you may have to use '\\' instead of just one '\'.

#for displaying json in pretty format on linux, needs python:
cat some.json | python -m json.tool

#Reference for character sets and encoding:
https://www.w3schools.com/charsets/ref_html_8859.asp

#compiling to c using nuitka
https://sourcecontribute.com/2015/05/02/compiling-python-to-standalone-executables-on-linux-using-nuitka/

#If you are going to write try and except, make sure syntactically all statements inside try are correct and valid. If the syntax is wrong,
then it will fail and come out of try block. Then it becomes very hard to catch the error. eg. In Statseeker code wrote just lnk instead
of lnk['key']. Since lnk was as dictionary, and the expected value was string, it was going out of try to except block and had to spend 
a lot of time to find the error (finally did though!)
