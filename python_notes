# Children within children using Multiprocessing is not possible. It throws and error: "daemonic processes are not allowed to have children."
# a*a*a is faster than a**3.
# Python dictionaries are implemented as hash tables.Link for more info: https://stackoverflow.com/questions/9010222/how-can-python-dict-have-multiple-keys-with-same-hash
see answer praveen-gollakota
# If you send the cookies with a request, you dont receive the cookies for the same request. 
#Info about Certificate Files (.der, .pem)-
.der and .pem are encodings. While .cer, .crt, .key are the common extensions. pkcs7 and pkcs12 are may be alternatives to .der and .pem? Dont know.  
Refer the link-
https://support.ssl.com/Knowledgebase/Article/View/19/0/der-vs-crt-vs-cer-vs-pem-certificates-and-how-to-convert-them
#cURL command to get the cookies back and sending with certificate file:
Final command with saving cookies and sending a certificate:
curl -k -d "j_username=tpcadmin&j_password=Passw0rd" --cert cert_pem.pem -X POST https://10.10.6.104:9569/srm/j_security_check -c cooks1234_WON.txt
#sent from 10.10.6.136 C:\Users\Administrator
#To convert a certificate just go windows machine, open the certificate>Details>copy to file>select base64 for .pem format. 
#The key matter is still not sure though. 
#time.clock() and time.time() difference Link. time.clock() is an excellent measuere for benchmarking performance of an algorithm. 
https://stackoverflow.com/questions/17498199/why-are-there-differences-in-python-time-time-and-time-clock-on-mac-os-x
# When using multiprocessing.Pool, by default the processes are created as daemonic. You will have to write a override sub-class 
to change that. 
#refer this link and go through multithreading course by Satish on udemy. 
#link: https://stackoverflow.com/questions/6974695/python-process-pool-non-daemonic
#also refer this from your MAC: 
http://localhost:8890/notebooks/Desktop/Applications/Google_Drive/__python_practice/_Intro_to_machine_learning/multi-multi_processing_error_working_muliti_multi_threading.ipynb
